name: Continuous CI

on:
  push:
    branches:
      - dev
      - qa
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
      # Install newman globally
      - name: Install newman
        run: |
         npm install -g newman
         npm install -g newman-reporter-slackreporter
         npm install -g newman-reporter-htmlextra
      # Make directory to upload test results 
      - name: Make Directory for Results
        run: mkdir -p testResults
      # Get current date
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      # Run postman collection in DEV server
      - name: Run Postman Collection
        if: github.ref == 'refs/heads/dev'
        env:
          DEV_COLLECTION_URL: ${{ secrets.DEV_COLLECTION_URL }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
        run: |
          newman run $DEV_COLLECTION_URL -x -r slackreporter,htmlextra --reporter-htmlextra-export testResults/htmlreport.html --reporter-htmlextra-title "Corinth API Test Report - DEV Server" --reporter-htmlextra-hideRequestBody "Create a user, Create a user Copy" --reporter-htmlextra-hideResponseBody "Create a user" --reporter-slackreporter-webhookurl $WEBHOOK_URL --reporter-slackreporter-token $OAUTH_TOKEN --reporter-slackreporter-chanel 'delphi-corinth-test'
      # Run postman collection in QA server
      - name: Run Postman Collection
        if: github.ref == 'refs/heads/qa'
        env:
          QA_COLLECTION_URL: ${{ secrets.QA_COLLECTION_URL }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
        run: |
          newman run $QA_COLLECTION_URL -x -r slackreporter,htmlextra --reporter-htmlextra-export testResults/htmlreport.html --reporter-htmlextra-title "Corinth API Test Report - QA Server" --reporter-htmlextra-hideRequestBody "Create a user, Create a user Copy" --reporter-htmlextra-hideResponseBody "Create a user" --reporter-slackreporter-webhookurl $WEBHOOK_URL --reporter-slackreporter-token $OAUTH_TOKEN --reporter-slackreporter-chanel 'delphi-corinth-test'
      # Upload the contents of Test Results directory to workspace
      - name: Output the run results
        uses: actions/upload-artifact@v2
        with:
         name: Corinth ${{steps.date.outputs.date}}
         path: testResults
